(()=>{var n={80:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.data=null,this.fetchData()}async fetchData(){try{const n=await fetch("http://127.0.0.1:8080/configurationsSection.json");this.data=await n.json(),this.render()}catch(n){console.error("Error fetching data:",n)}}render(){if(!this.data)return void(this.shadowRoot.innerHTML="<div>Loading...</div>");const n=this.data.widget;this.shadowRoot.innerHTML=`\n            ${"page"===n?`<page-widget data='${JSON.stringify(this.data)}'></page-widget>`:"section"===n?`<section-widget data='${JSON.stringify(this.data)}'></section-widget>`:`<sticky-widget data='${JSON.stringify(this.data)}'></sticky-widget>`}\n        `}}customElements.define("event-geni",n)},672:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.imageurl="https://designshack.net/wp-content/uploads/placeholder-image.png"}connectedCallback(){this.data=JSON.parse(this.getAttribute("data")),this.render(),this.updateLayout(),this.observer=new ResizeObserver((()=>{this.updateLayout()})),this.observer.observe(this.shadowRoot.querySelector(".container"))}updateLayout(){const n=this.shadowRoot.querySelector(".cardContainer"),t=n.offsetWidth;let e=Math.floor(t/330);e=Math.max(e,1),n.style.gridTemplateColumns=`repeat(${e}, 1fr)`}disconnectedCallback(){window.removeEventListener("resize",this.updateLayout.bind(this))}render(){this.shadowRoot.innerHTML=`\n          <style>\n              .container {\n                position:relative;\n                padding: 50px;\n              }\n              .blur {\n                  height: 100vh;\n                  overflow: hidden;\n                  filter: blur(3px);\n              }\n              .heading {\n                  font-size: 35px;\n                  color: white;\n                  font-weight: 900;\n              }\n              .cardContainer {\n                height:100%;\n                display: grid;  \n                row-gap:30px;\n                margin-top: 30px;\n                justify-items: center;\n              }\n              .modal {\n                  width : 90%;  \n                  position: absolute;\n                  left: 50%;\n                  top: 100px;\n                  transform: translate(-50%, 0%);\n              }\n            \n              @media screen and (max-width: 1560px) {\n                .cardContainer {\n                    grid-template-columns: repeat(3, 1fr); /* Two columns in each row when screen width is at most 1200px */\n                }\n            }\n            \n              @media screen and (max-width: 1200px) {\n                .cardContainer {\n                    grid-template-columns: repeat(2, 1fr); /* Two columns in each row when screen width is at most 1200px */\n                }\n            }        \n          </style>\n\n          <div class="container" style="background-color: ${this.data.layoutBgColor};">\n              <div class="heading">Your Events</div>\n              <div class="cardContainer">\n                  ${this.data.eventData.map(((n,t)=>`\n                  <card-component\n                    image="${this.imageurl}"\n                    date="${n._source.start_date}"\n                    eventname="${n._source.name}"\n                    location="${n._source.country_name}"\n                    description="${n._source.description}"\n                    key="${t}"\n                    type="${n._source.event_type}"\n                 ></card-component>\n                  `)).join("")}\n              </div>    \n          </div>  \n      `}}customElements.define("section-data",n)},204:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}connectedCallback(){this.eventname=this.getAttribute("eventname"),this.eventlocation=this.getAttribute("eventlocation"),this.eventimage=this.getAttribute("eventimage"),this.eventdate=this.getAttribute("eventdate"),this.eventdescription=this.getAttribute("eventdescription"),this.shadowRoot.querySelector(".backbtn").addEventListener("click",(()=>{console.log("clicked")})),this.render()}handleClose(){console.log("cliked")}render(){this.shadowRoot.innerHTML=`\n          <style>\n              /* Add your CSS styles here */\n              .backbtn {\n                  background-color: rgb(216, 216, 216);\n                  width: fit-content;\n                  padding: 10px;\n                  border-radius: 40%;\n                  cursor: pointer;\n              }\n              .container {\n                  display: flex;\n                  justify-content: center;\n                  margin-top: 40px;\n              }\n              .content {\n                  width: 100%;\n              }\n              .img img{\n                width : 300px;\n                height: 250px;\n              }\n              .date {\n                  font-size: 20px;\n                  background-color: rgb(253, 219, 109);\n                  padding: 5px 10px;\n                  width: fit-content;\n                  border-radius: 30px;\n              }\n              .eventName {\n                  font-size: 50px;\n                  color: rgb(96, 63, 240);\n                  margin-top: 20px;\n                  font-weight: 800;\n              }\n              .location {\n                  margin-top: 20px;\n                  font-size: 20px;\n              }\n              .desc {\n                  margin-top: 10px;\n              }\n              .formHeading {\n                  margin-top: 50px;\n                  font-size: 40px;\n                  color: rgb(96, 63, 240);\n              }\n              .form {\n                  margin-top: 20px;\n              }\n              .input {\n                  margin-top: 10px;\n                  border: none;\n                  background-color: rgb(212, 212, 212);\n                  font-size: 25px;\n                  width: 80%;\n                  border-radius: 10px;\n                  padding: 5px 10px;\n              }\n              .email {\n                  margin-top: 20px;\n              }\n              .submitBtn {\n                  font-size: 20px;\n                  margin-top: 20px;\n                  border: 2px solid rgb(96, 63, 240);\n                  border-radius: 20px;\n                  width: fit-content;\n                  padding: 5px 20px;\n                  background-color: transparent;\n                  cursor: pointer;\n                  color: rgb(96, 63, 240);\n              }\n              .submitBtn:hover {\n                  transition-duration: .3s;\n                  color: white;\n                  background-color: rgb(96, 63, 240);\n              }\n          </style>\n          <div>\n              <div class="backbtn" @click=${this.handleClose}>\n                  <\n              </div>\n              <div class="container">\n                  <div class="details">\n                      <div class="content">\n                          <div class="date">${this.eventdate}</div>\n                              <div class="eventName">${this.eventname}</div>\n                              <div class="location">${this.eventlocation}</div>\n                          <div class="desc">${this.eventdescription}</div>\n                      </div>\n                      <h1 class="formHeading">Register Yourself</h1>\n                      <form class="form">\n                          <div class="name">Name</div>\n                          <input class="input"></input>\n                          <div class="email">Email</div>\n                          <input class="input"></input>\n                          <div>\n                              <button type="submit" class="submitBtn">Register</button>\n                          </div>\n                      </form>\n                  </div>\n                      <div class="img">\n                          <img\n                              src=${this.eventimage}\n                              alt="Author"\n                              style="border-radius: 20px;"\n                          />\n                      </div>\n              </div>\n          </div>\n      `}}customElements.define("register-form",n)},708:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.currentIndex=0,this.banners=["<hero-banner></hero-banner>","<hero-banner></hero-banner>","<hero-banner></hero-banner>"]}connectedCallback(){this.render(),this.updateView()}updateView(){this.shadowRoot.querySelector(".innerSlider").style.transform=`translateX(-${100*this.currentIndex}%)`,this.shadowRoot.querySelectorAll(".banner").forEach(((n,t)=>{n.classList.toggle("active",t===this.currentIndex),n.classList.toggle("inactive",t!==this.currentIndex)})),this.shadowRoot.querySelector(".prev").disabled=0===this.currentIndex,this.shadowRoot.querySelector(".next").disabled=this.currentIndex===this.banners.length-1}handleNext(){this.currentIndex<this.banners.length-1&&(this.currentIndex+=1,this.updateView())}handlePrev(){this.currentIndex>0&&(this.currentIndex-=1,this.updateView())}render(){this.shadowRoot.innerHTML=`\n            <style>\n                .carousel {\n                    position: relative;\n                }\n                .innerSlider {\n                    display: flex;\n                    width: 100%;\n                    transition: transform 0.5s ease-in-out;\n                }\n                .banner {\n                    width: 100%;\n                    flex-shrink: 0;\n                    opacity: 0.5;\n                    transition: opacity 0.5s ease-in-out;\n                }\n                .banner.active {\n                    opacity: 1;\n                }\n                .banner.inactive {\n                    opacity: 0.5;\n                }\n                .navButton {\n                    background-color: #007bff;\n                    border: none;\n                    color: white;\n                    padding: 10px;\n                    cursor: pointer;\n                    font-size: 18px;\n                    position: absolute;\n                    top: 50%;\n                    transform: translateY(-50%);\n                    z-index: 1;\n                    border-radius: 5px;\n                }\n                .navButton:disabled {\n                    background-color: #ccc;\n                    cursor: not-allowed;\n                }\n                .navButton:first-of-type {\n                    left: 0;\n                }\n                .navButton:last-of-type {\n                    right: 0;\n                }\n            </style>\n            <div class="carousel">\n                <button class="navButton prev">&lt;</button>\n                <div class="innerSlider">\n                    ${this.banners.map(((n,t)=>`\n                        <div class="banner ${t===this.currentIndex?"active":"inactive"}" data-index="${t}">\n                            ${n}\n                        </div>\n                    `)).join("")}\n                </div>\n                <button class="navButton next">&gt;</button>\n            </div>\n        `,this.shadowRoot.querySelector(".prev").addEventListener("click",(()=>this.handlePrev())),this.shadowRoot.querySelector(".next").addEventListener("click",(()=>this.handleNext()))}}customElements.define("caraousel-view",n)},232:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}connectedCallback(){}static get observedAttributes(){return["image","eventname","date","location","cardcolor","cardradius","description","cardwidth","imageheight","cardheight","type"]}attributeChangedCallback(n,t,e){this[n]=e,this.render()}render(){this.shadowRoot.innerHTML=`\n      <style>\n      .card{\n        display: flex;\n        flex-direction : column;\n        width:300px;\n        height : 450px;\n        cursor: pointer;\n    }\n    .img {\n      height:40%;\n    }\n    .img img{\n      height:100%;\n      width:300px;\n    }\n    .card:hover{\n        transition-duration: .2s;\n        filter: drop-shadow(1px 1px 5px rgb(245, 245, 245));\n    }\n    .content{\n      height:50%;\n      display: flex;\n      flex-direction : column;\n      justify-content:space-evenly;\n        padding: 20px;\n    }\n    .tag{\n        background-color: rgb(253, 219, 109);\n        border-radius: 30px;\n        width: fit-content;\n        padding: 5px 20px;\n        font-weight: bold;\n        color: rgb(39, 39, 39);\n        font-size: 20px;\n    }\n    .date{\n        margin-top: 20px;\n        color: rgb(39, 39, 39);\n        font-size: 20px;\n        \n    }\n    .eventName{\n        font-size: 25px;\n        font-weight: bold;\n        color: rgb(96, 63, 240);\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n    .location{\n        font-size: 20px;\n        display: flex;\n        color:black;\n    }\n    .location div{\n        margin-right: 10px;\n    }\n    .btn{\n        margin-top: 10px;\n        display: flex;\n        border: 2px solid rgb(96, 63, 240);\n        border-radius: 20px;\n        width: fit-content;\n        padding: 5px 20px;\n        align-items: center;\n    }\n    .btn div{\n        color: rgb(96, 63, 240);\n        margin-right: 10px;\n    }\n    .btn:hover{\n        transition-duration: .3s;\n        background-color:rgb(96, 63, 240) ;\n    }\n    .btn:hover div{\n        transition-duration: .3s;\n        color: white;\n    }\n    \n      </style>\n      <div class="card" style="background-color:#e6e6e6; border-radius:10px">\n        <div class="img">\n          <img src="${this.image}" alt="author" style="border-top-left-radius:10px; border-top-right-radius:10px;">\n        </div>\n        <div class="content">\n          <div class="tag">${this.type}</div>\n          <div class="date">${this.date}</div>\n          <div class="eventName">${this.eventname}</div>\n          <div class="location">${this.location}</div>\n          <div class="btn" @click="${this.handlemodal}">\n            <div>Register</div>\n          </div>\n        </div>\n      </div>\n    `}}customElements.define("card-view",n)},512:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.imageurl="https://designshack.net/wp-content/uploads/placeholder-image.png"}connectedCallback(){this.data=JSON.parse(this.getAttribute("data")),this.render()}updateLayout(){const n=this.shadowRoot.querySelector(".cardContainer"),t=n.offsetWidth;n.style.gridTemplateColumns=t>640&&t<=940?"repeat(2,1fr)":t<=640?"repeat(1,1fr)":"repeat(3,1fr)"}render(){this.shadowRoot.innerHTML=`\n          <style>\n              .container {\n                height:100%;\n                padding: 50px;\n              }\n              .cardContainer {\n                height:100%;\n                display: grid;  \n                row-gap:30px;\n                margin-top: 30px;\n                grid-template-columns: repeat(3, 1fr);\n                justify-items: center;\n              }\n            }\n            \n              @media screen and (max-width: 1560px) {\n                .cardContainer {\n                    grid-template-columns: repeat(3, 1fr); /* Two columns in each row when screen width is at most 1200px */\n                }\n            }\n            \n              @media screen and (max-width: 1200px) {\n                .cardContainer {\n                    grid-template-columns: repeat(2, 1fr); /* Two columns in each row when screen width is at most 1200px */\n                }\n            }       \n            @media screen and (max-width: 800px) {\n                .cardContainer {\n                    grid-template-columns: repeat(1, 1fr); /* Two columns in each row when screen width is at most 1200px */\n                }\n            }   \n          </style>\n\n          <div class="container" style="background-color: black;">\n              <div class="cardContainer">\n                      <card-view\n                          image="${this.imageurl}"\n                          date="1/1/1"\n                          eventname="Cinema"\n                          location="Mandi House"\n                          description="Acting and Learning"\n                          type="Workshop"\n                      ></card-view>\n                          <card-view\n                          image="${this.imageurl}"\n                          date="1/1/1"\n                          eventname="Cinema"\n                          location="Mandi House"\n                          description="Acting and Learning"\n                          type="Workshop"\n                      ></card-view>\n                          <card-view\n                          image="${this.imageurl}"\n                          date="1/1/1"\n                          eventname="Cinema"\n                          location="Mandi House"\n                          description="Acting and Learning"\n                          type="Workshop"\n                      ></card-view>\n                        <card-view\n                          image="${this.imageurl}"\n                          date="1/1/1"\n                          eventname="Cinema"\n                          location="Mandi House"\n                          description="Acting and Learning"\n                          type="Workshop"\n                      ></card-view>\n              </div>    \n          </div>  \n        \n      `}}customElements.define("grid-view",n)},228:()=>{class n extends HTMLElement{constructor(){super(),this.imageurl="https://designshack.net/wp-content/uploads/placeholder-image.png",this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){const n=this.getAttribute("card-radius")||"10",t=this.getAttribute("card-bg-color")||"#1a1a1a",e=this.getAttribute("date-font-size")||"16",i=this.getAttribute("event-name-color")||"#ffffff",a=this.getAttribute("event-name-size")||"24",s=this.getAttribute("location-font-size")||"14",o=this.getAttribute("btn-bg-color")||"#007bff",r=this.getAttribute("btn-font-color")||"#ffffff",d=this.getAttribute("btn-border-width")||"1",c=this.getAttribute("btn-border-color")||"#007bff",l=this.getAttribute("btn-radius")||"5",h=this.getAttribute("btn-font-size")||"14";this.shadowRoot.innerHTML=`\n        <style>\n            .heroBanner {\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n                background-color: ${t};\n                padding: 20px;\n                border-radius: ${n}px;\n            }\n            .eventDetails {\n                width: 70%;\n                height: 100%;\n                display: flex;\n                flex-direction: column;\n                justify-content: space-evenly;\n            }\n            .name {\n                font-weight: 800;\n                color: ${i};\n                font-size: ${a}px;\n            }\n            .date {\n                background-color: rgb(253, 219, 109);\n                width: fit-content;\n                padding: 5px 10px;\n                border-radius: 20px;\n                font-size: ${e}px;\n            }\n            .location {\n                display: flex;\n                font-size: ${s}px;\n            }\n            .desc {\n                color: white;\n            }\n            .detail_btnContainer {\n                display: flex;\n                justify-content: space-between;\n            }\n            .btn {\n                padding: 5px 10px;\n                width: fit-content;\n                height: fit-content;\n                background-color: ${o};\n                color: ${r};\n                border-width: ${d}px;\n                border-color: ${c};\n                border-radius: ${l}px;\n                font-size: ${h}px;\n                border-style: solid;\n                cursor: pointer;\n            }\n            .eventImg {\n                filter: drop-shadow(1px 1px 6px rgb(65, 65, 65));\n                width: 100px;\n                height: 100px;\n            }\n        </style>\n        <div class="heroBanner">\n            <div class="eventDetails">\n                <div class="date">Date</div>\n                <div class="name">Name Of Event</div>\n                <div class="detail_btnContainer">\n                    <div class="location_descContainer">\n                        <div class="location">Country</div>\n                        <div class="desc">Your Description</div>\n                    </div>\n                    <div class="btn">Register</div>\n                </div>\n            </div>\n            <img class="eventImg" src=${this.imageurl} alt="Event"/>\n        </div>\n    `}}customElements.define("hero-banner",n)},820:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.imageurl="https://designshack.net/wp-content/uploads/placeholder-image.png"}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML="\n             <hero-banner></hero-banner>\n             <list-view></list-view>\n        "}}customElements.define("herobannerlist-view",n)},740:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.imageurl="https://designshack.net/wp-content/uploads/placeholder-image.png"}connectedCallback(){this.data=JSON.parse(this.getAttribute("data")),console.log("page data in multiple data ",this.data),this.render(),this.updateLayout(),this.observer=new ResizeObserver((()=>{this.updateLayout()})),this.observer.observe(this.shadowRoot.querySelector(".container"))}render(){this.shadowRoot.innerHTML='\n          <style>\n            .container{\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                gap:20px;\n                width: 100%;\n                height: 100%;\n            }\n          </style>\n          <div class="container">   \n            <listview-card></listview-card>\n            <listview-card></listview-card>\n            <listview-card></listview-card>\n            <listview-card></listview-card>\n          </div>  \n        \n      '}}customElements.define("list-view",n)},560:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){const n=this.getAttribute("card-radius")||"10",t=this.getAttribute("card-bg-color")||"#6750a4",e=this.getAttribute("event-name-color")||"#000",i=this.getAttribute("event-name-size")||"16",a=(this.getAttribute("date-font-size"),this.getAttribute("location-font-size")||"12"),s=this.getAttribute("btn-bg-color")||"#007bff",o=this.getAttribute("btn-font-color")||"#fff",r=this.getAttribute("btn-border-width")||"1",d=this.getAttribute("btn-border-color")||"#007bff",c=this.getAttribute("btn-radius")||"5",l=this.getAttribute("btn-font-size")||"14";this.shadowRoot.innerHTML=`\n      <style>\n        .card {\n          height: 240px;\n          width : 100%;\n          border: 1px solid #6650a465;\n          display: flex;\n          margin-bottom: 25px;\n          margin-top: 40px;\n          padding: 25px;\n          border-radius: ${n}px;\n          background-color: ${t};\n        }\n              .cardImg_container {\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n              }\n\n              .cardImg {\n                  border-radius: 12px;\n              }\n\n              .cardDetails {\n                  width: 100%;\n                  display: flex;\n                  flex-direction: column;\n                  justify-content: space-between;\n                  padding-left: 20px;\n              }\n\n              .eventHeader {\n                  display: flex;\n                  justify-content: space-between;\n                  align-items: center;\n              }\n\n              .location_date_btnContainer {\n                  display: flex;\n                  justify-content: space-between;\n              }\n\n              .location_dateContainer {\n                  display: flex;\n              }\n\n              .eventLocation {\n                  display: flex;\n                  align-items: center;\n                  font-size: ${a}px;\n              }\n\n              .eventLocation img {\n                  background-color: #6650a452;\n                  border-radius: 50%;\n                  padding: 6px;\n                  margin-right: 7px;\n              }\n\n              .eventDate {\n                  display: flex;\n                  align-items: center;\n                  background-color: #313131;\n                  padding: 3px 6px;\n                  border-radius: 5px;\n                  margin-left: 20px;\n              }\n\n              .eventDate img {\n                  margin-right: 7px;\n              }\n\n              .registerBtn {\n                  padding: 5px 10px;\n                  background-color: ${s};\n                  color: ${o};\n                  border-width: ${r}px;\n                  border-color: ${d};\n                  border-radius: ${c}px;\n                  font-size: ${l}px;\n                  border-style: solid;\n              }\n          </style>\n          <div class="card">\n              <div class="cardImg_container">\n                  <img\n                    src="https://via.placeholder.com/238x192"\n                    alt="eventImage"\n                    class="cardImg"\n                    width="238"\n                    height="192"\n                  />\n              </div>\n              <div class="cardDetails">\n                  <div class="eventHeader">\n                      <div class="eventName" style="color: ${e}; font-size: ${i}px;">\n                          Event Name\n                      </div>\n                  </div>\n                  <div class="eventDesc">Event Description</div>\n                  <div class="location_date_btnContainer">\n                      <div class="location_dateContainer">\n                          <div class="eventLocation">\n                              <img src="locationIcon.png" alt="locationIcon" width="24" height="24" />\n                              <div>Location</div>\n                          </div>\n                          <div class="eventDate">\n                              <img src="calendarIcon.png" alt="calendarIcon" width="14" height="14" />\n                              <div>Date</div>\n                          </div>\n                      </div>\n                      <div class="registerBtn">\n                          Register\n                      </div>\n                  </div>\n              </div>\n          </div>\n      `}}customElements.define("listview-card",n)},688:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){localStorage.getItem("popupShown")||(this.render(),this.addEventListeners())}addEventListeners(){this.shadowRoot.querySelector(".closebtn").addEventListener("click",(()=>this.closePopup()))}closePopup(){localStorage.setItem("popupShown","true"),this.remove()}render(){this.shadowRoot.innerHTML='\n        <style>\n        .body{\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100vw;\n            height: 100vh;\n            background-color: rgba(0, 0, 0, 0.5);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 999;\n        }\n        .popup{\n            position: relative;\n            height: 500px;\n            width: 400px;\n            border-radius: 10px;\n            background-color: #1a1a1a;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 20px;\n            z-index: 1000;\n        }\n        .poster{\n            width: 100%;\n            height:200px;\n            border-top-left-radius: 10px;\n            border-top-right-radius: 10px;\n        }\n        .eventname{\n            color: white;\n            font-size: 35px;\n            font-family:\'Franklin Gothic Medium\', \'Arial Narrow\', Arial, sans-serif;\n        }\n        .description{\n            color: white;\n            font-family: \'Gill Sans\', \'Gill Sans MT\', Calibri, \'Trebuchet MS\', sans-serif;\n            text-align: center;\n        }\n        .registerbtn{\n            padding: 5px 20px;\n            font-size: 20px;\n            background-color: #6750a4;\n            color: white;\n            border-radius: 4px;\n            border: none;\n            cursor: pointer;\n        }\n        .closebtn{\n            background:none;\n            color: white;\n            border: none;\n            cursor: pointer;\n        }\n        </style>\n        <div class="body">\n        <div class="popup">\n            <img class="poster" src="https://imgstaticcontent.lbb.in/lbbnew/wp-content/uploads/2018/03/16130738/pic41-1024x681.jpg" alt="">\n            <div class="eventname">Theatre Festival</div>\n            <div class="description">The Delhi Theatre scene is waiting in the wings for a renaissance, and we have taken the onus to make it happen.</div>\n            <button class="registerbtn" type="button">Register</button>\n            <button class="closebtn">Close</button>\n        </div>\n        </div>\n        '}}customElements.define("popup-view",n)},104:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.fetchData(),this.data=null,this.toggleState=!1,this.formData={eventname:"demoevent",eventlocation:"demolocation",eventimage:"https://designshack.net/wp-content/uploads/placeholder-image.png",eventdate:"1/1/1",eventdescription:"demo description"},this.pagequery="",this.pageid=""}async fetchData(){try{const n=await fetch(`https://api.eventgeni.com/widgets/${this.pageid}?type=page`),t=await n.json(),e=JSON.parse(t.data.body);console.log("Page Data posted",t.data);const i=e.active;if(this.pagequery=t.data.query,i){const n=await fetch(`https://api.eventgeni.com/es/find?company=104&${this.pagequery}`);this.data=await n.json()}else console.log("Widget is inactive. Skipping data fetch."),this.data=null;this.render()}catch(n){console.error("Error fetching data:",n)}}connectedCallback(){this.pageid=this.getAttribute("page-id"),this.fetchData(),this.observeAttributes(),this.addEventListener("modal-open",this.handleModalOpen.bind(this)),this.render()}observeAttributes(){this.observer=new MutationObserver((n=>{n.forEach((n=>{"attributes"===n.type&&"page-id"===n.attributeName&&(this.pageid=n.target.getAttribute("page-id"),this.fetchData())}))})),this.observer.observe(this,{attributes:!0})}handleModalOpen(n){this.toggleState=!0,this.formData=n.detail,this.render()}render(){let n=!1;this.data?.top_3?.length>0&&(n=!0),this.shadowRoot.innerHTML=`\n        <style>\n            .container{\n                height : fit-content;\n            }\n            .blur {\n                height: 100vh;\n                overflow: hidden;\n                filter: blur(2px);\n            }\n            .modal{\n                padding : 20px;\n                border-radius:10px;\n                position : absolute;\n                background : white;\n                height: fit-content;\n                width: fit-content;\n                top : 50%;\n                left : 50%;\n                transform: translate(-50%, -50%);\n              }\n        </style>\n        <div class="body">\n            <div class="container ${this.toggleState?"blur":""}">\n                ${n?`<hero-banner data='${JSON.stringify(this.data)}'></hero-banner>`:""}\n                <grid-view data='${JSON.stringify(this.data)}'></grid-view>\n            </div>\n            ${this.toggleState?`<div class="modal">\n             <register-form \n             eventname="${this.formData.eventname}"\n             eventlocation="${this.formData.eventlocation}"\n             eventimage="${this.formData.eventimage}"\n             eventdate="${this.formData.eventdate}"\n             eventdescription="${this.formData.eventdescription}"\n             ></register-form>\n            </div>`:""}\n        </div>\n\n`}}customElements.define("page-widget",n)},40:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML="\n        <popup-view></popup-view>\n        "}}customElements.define("popup-widget",n)},172:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.fetchData(),this.data=null,this.toggleState=!1,this.formData={eventname:"demoevent",eventlocation:"demolocation",eventimage:"https://designshack.net/wp-content/uploads/placeholder-image.png",eventdate:"1/1/1",eventdescription:"demo description"},this.sectionquery="",this.sectionid=""}async fetchData(){try{const n=await fetch(`https://api.eventgeni.com/widgets/${this.sectionid}?type=page`),t=await n.json(),e=JSON.parse(t.data.body);console.log("Section Data posted",t.data);const i=e.active;if(this.sectionquery=t.data.query,i){const n=await fetch(`https://api.eventgeni.com/es/find?company=104&${this.sectionquery}`);this.data=await n.json()}else console.log("Widget is inactive. Skipping data fetch."),this.data=null;this.render()}catch(n){console.error("Error fetching data:",n)}}connectedCallback(){this.sectionid=this.getAttribute("section-id"),this.fetchData(),this.observeAttributes(),this.addEventListener("modal-open",this.handleModalOpen.bind(this)),this.render()}observeAttributes(){this.observer=new MutationObserver((n=>{n.forEach((n=>{"attributes"===n.type&&"section-id"===n.attributeName&&(this.sectionid=n.target.getAttribute("section-id"),this.fetchData())}))})),this.observer.observe(this,{attributes:!0})}handleModalClose(){this.toggleState=!1}handleModalOpen(n){this.toggleState=!0,this.formData=n.detail,console.log(this.formData),this.render()}render(){let n=!1;this.data?.top_3?.length>0&&(n=!0),this.shadowRoot.innerHTML=`\n        <style>\n        .modal{\n            padding : 20px;\n            border-radius:10px;\n            position : absolute;\n            background : white;\n            height: fit-content;\n            width: fit-content;\n            top : 50%;\n            left : 50%;\n            transform: translate(-50%, -50%);\n            filter : drop-shadow(1px 1px 6px black);\n          }\n        </style>\n        <div class="body">\n             ${n?`<promoted-event data='${JSON.stringify(this.data)}'></promoted-event>`:""}\n            <section-data data='${JSON.stringify(this.data)}'></section-data>\n            ${this.toggleState?`<div class="modal">\n            <register-form \n            eventname="${this.formData.eventname}"\n            eventlocation="${this.formData.eventlocation}"\n            eventimage="${this.formData.eventimage}"\n            eventdate="${this.formData.eventdate}"\n            eventdescription="${this.formData.eventdescription}"\n            ></register-form>\n           </div>`:""}\n        </div>\n        `}}customElements.define("section-widget",n)},692:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.data=null,this.fetchData(),this.stickyid=""}async fetchData(){try{const n=await fetch(`https://api.eventgeni.com/widgets/${this.stickyid}?type=sticky`),t=(await n.json()).data;console.log("Sticky Data posted",t),"false"===t.active?this.data=null:(this.data=t,this.render())}catch(n){console.error("Error fetching data:",n)}}connectedCallback(){this.stickyid=this.getAttribute("sticky-id"),this.fetchData(),this.observeAttributes(),this.render()}observeAttributes(){this.observer=new MutationObserver((n=>{n.forEach((n=>{"attributes"===n.type&&"sticky-id"===n.attributeName&&(this.stickyid=n.target.getAttribute("sticky-id"),this.fetchData())}))})),this.observer.observe(this,{attributes:!0})}disconnectedCallback(){this.observer&&this.observer.disconnect()}render(){this.shadowRoot.innerHTML=`\n        <style>\n            .navbar{\n                position: sticky;\n                top: 0;\n                width:100%;\n                display:flex;\n                align-items:center;\n                justify-content:center;\n                background-color: ${this.data.bgColor};\n                color:${this.data.fgColor};\n                height:${this.data.height}px; \n              \n            }\n            .eventname{\n                font-size:${this.data.fontSize}px;\n            }\n        </style>\n            <div class="navbar">\n                <div class="eventname">${this.data.event}</div>\n            </div>\n        `}}customElements.define("sticky-widget",n)}},t={};function e(i){var a=t[i];if(void 0!==a)return a.exports;var s=t[i]={exports:{}};return n[i](s,s.exports,e),s.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var i in t)e.o(t,i)&&!e.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:t[i]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{"use strict";e(204),e(80),e(104),e(172),e(692),e(40),e(672),e(512),e(740),e(560),e(708),e(688),e(228),e(232),e(820)})()})();